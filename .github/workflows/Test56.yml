name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x'  # Specify your .NET version

      - name: Restore dependencies
        run: dotnet restore path/to/your/project.csproj

      - name: Build
        run: dotnet build path/to/your/project.csproj --configuration Release --no-restore

      - name: Run unit tests
        run: dotnet test path/to/your/project.csproj --configuration Release --no-build --collect:"XPlat Code Coverage"

      - name: Publish code coverage results
        uses: codecov/codecov-action@v3
        with:
          file: 'coverage.cobertura.xml'

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Staging
        run: |
          echo "Deploying to staging environment..."
          # Replace with your actual deployment commands
          # Example: ./deploy.sh staging

  notifications:
    runs-on: ubuntu-latest
    needs: [build, deploy]
    if: failure()

    steps:
      - name: Notify team of failure
        uses: dawidd6/action-slack@v3
        with:
          status: failure
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
